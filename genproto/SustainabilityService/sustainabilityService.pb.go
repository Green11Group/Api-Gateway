// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.18.0
// source: protos/sustainabilityService.proto

package SustainabilityService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 1
type LogImpactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CommunityId string  `protobuf:"bytes,2,opt,name=community_id,json=communityId,proto3" json:"community_id,omitempty"`
	Category    string  `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	Amount      float32 `protobuf:"fixed32,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Unit        string  `protobuf:"bytes,5,opt,name=unit,proto3" json:"unit,omitempty"`
}

func (x *LogImpactRequest) Reset() {
	*x = LogImpactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_sustainabilityService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogImpactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogImpactRequest) ProtoMessage() {}

func (x *LogImpactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_sustainabilityService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogImpactRequest.ProtoReflect.Descriptor instead.
func (*LogImpactRequest) Descriptor() ([]byte, []int) {
	return file_protos_sustainabilityService_proto_rawDescGZIP(), []int{0}
}

func (x *LogImpactRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LogImpactRequest) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

func (x *LogImpactRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *LogImpactRequest) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *LogImpactRequest) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

type LogImpactResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId      string  `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CommunityId string  `protobuf:"bytes,3,opt,name=community_id,json=communityId,proto3" json:"community_id,omitempty"`
	Category    string  `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	Amount      float32 `protobuf:"fixed32,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Unit        string  `protobuf:"bytes,6,opt,name=unit,proto3" json:"unit,omitempty"`
	LoggedAt    string  `protobuf:"bytes,7,opt,name=logged_at,json=loggedAt,proto3" json:"logged_at,omitempty"`
}

func (x *LogImpactResponse) Reset() {
	*x = LogImpactResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_sustainabilityService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogImpactResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogImpactResponse) ProtoMessage() {}

func (x *LogImpactResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_sustainabilityService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogImpactResponse.ProtoReflect.Descriptor instead.
func (*LogImpactResponse) Descriptor() ([]byte, []int) {
	return file_protos_sustainabilityService_proto_rawDescGZIP(), []int{1}
}

func (x *LogImpactResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LogImpactResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LogImpactResponse) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

func (x *LogImpactResponse) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *LogImpactResponse) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *LogImpactResponse) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *LogImpactResponse) GetLoggedAt() string {
	if x != nil {
		return x.LoggedAt
	}
	return ""
}

// 2
type GetUserImpactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserImpactRequest) Reset() {
	*x = GetUserImpactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_sustainabilityService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserImpactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserImpactRequest) ProtoMessage() {}

func (x *GetUserImpactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_sustainabilityService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserImpactRequest.ProtoReflect.Descriptor instead.
func (*GetUserImpactRequest) Descriptor() ([]byte, []int) {
	return file_protos_sustainabilityService_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserImpactRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserImpactResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Impacts []*LogImpactResponse `protobuf:"bytes,1,rep,name=impacts,proto3" json:"impacts,omitempty"`
}

func (x *GetUserImpactResponse) Reset() {
	*x = GetUserImpactResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_sustainabilityService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserImpactResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserImpactResponse) ProtoMessage() {}

func (x *GetUserImpactResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_sustainabilityService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserImpactResponse.ProtoReflect.Descriptor instead.
func (*GetUserImpactResponse) Descriptor() ([]byte, []int) {
	return file_protos_sustainabilityService_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserImpactResponse) GetImpacts() []*LogImpactResponse {
	if x != nil {
		return x.Impacts
	}
	return nil
}

// 3
type GetCommunityImpactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommunityId string `protobuf:"bytes,1,opt,name=community_id,json=communityId,proto3" json:"community_id,omitempty"`
}

func (x *GetCommunityImpactRequest) Reset() {
	*x = GetCommunityImpactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_sustainabilityService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommunityImpactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommunityImpactRequest) ProtoMessage() {}

func (x *GetCommunityImpactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_sustainabilityService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommunityImpactRequest.ProtoReflect.Descriptor instead.
func (*GetCommunityImpactRequest) Descriptor() ([]byte, []int) {
	return file_protos_sustainabilityService_proto_rawDescGZIP(), []int{4}
}

func (x *GetCommunityImpactRequest) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

type GetCommunityImpactResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Impacts []*LogImpactResponse `protobuf:"bytes,1,rep,name=impacts,proto3" json:"impacts,omitempty"`
}

func (x *GetCommunityImpactResponse) Reset() {
	*x = GetCommunityImpactResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_sustainabilityService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommunityImpactResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommunityImpactResponse) ProtoMessage() {}

func (x *GetCommunityImpactResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_sustainabilityService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommunityImpactResponse.ProtoReflect.Descriptor instead.
func (*GetCommunityImpactResponse) Descriptor() ([]byte, []int) {
	return file_protos_sustainabilityService_proto_rawDescGZIP(), []int{5}
}

func (x *GetCommunityImpactResponse) GetImpacts() []*LogImpactResponse {
	if x != nil {
		return x.Impacts
	}
	return nil
}

// 4
type GetChallengesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetChallengesRequest) Reset() {
	*x = GetChallengesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_sustainabilityService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChallengesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChallengesRequest) ProtoMessage() {}

func (x *GetChallengesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_sustainabilityService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChallengesRequest.ProtoReflect.Descriptor instead.
func (*GetChallengesRequest) Descriptor() ([]byte, []int) {
	return file_protos_sustainabilityService_proto_rawDescGZIP(), []int{6}
}

type GetChallengesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Challenges []*PostChallengesResponse `protobuf:"bytes,1,rep,name=challenges,proto3" json:"challenges,omitempty"`
}

func (x *GetChallengesResponse) Reset() {
	*x = GetChallengesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_sustainabilityService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChallengesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChallengesResponse) ProtoMessage() {}

func (x *GetChallengesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_sustainabilityService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChallengesResponse.ProtoReflect.Descriptor instead.
func (*GetChallengesResponse) Descriptor() ([]byte, []int) {
	return file_protos_sustainabilityService_proto_rawDescGZIP(), []int{7}
}

func (x *GetChallengesResponse) GetChallenges() []*PostChallengesResponse {
	if x != nil {
		return x.Challenges
	}
	return nil
}

// 5
type JoinChallengeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CommunityId string  `protobuf:"bytes,2,opt,name=community_id,json=communityId,proto3" json:"community_id,omitempty"`
	ChallengeId string  `protobuf:"bytes,3,opt,name=challenge_id,json=challengeId,proto3" json:"challenge_id,omitempty"`
	Progres     float32 `protobuf:"fixed32,4,opt,name=progres,proto3" json:"progres,omitempty"`
	CompletedAt string  `protobuf:"bytes,5,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
}

func (x *JoinChallengeRequest) Reset() {
	*x = JoinChallengeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_sustainabilityService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinChallengeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinChallengeRequest) ProtoMessage() {}

func (x *JoinChallengeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_sustainabilityService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinChallengeRequest.ProtoReflect.Descriptor instead.
func (*JoinChallengeRequest) Descriptor() ([]byte, []int) {
	return file_protos_sustainabilityService_proto_rawDescGZIP(), []int{8}
}

func (x *JoinChallengeRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *JoinChallengeRequest) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

func (x *JoinChallengeRequest) GetChallengeId() string {
	if x != nil {
		return x.ChallengeId
	}
	return ""
}

func (x *JoinChallengeRequest) GetProgres() float32 {
	if x != nil {
		return x.Progres
	}
	return 0
}

func (x *JoinChallengeRequest) GetCompletedAt() string {
	if x != nil {
		return x.CompletedAt
	}
	return ""
}

type JoinChallengeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CommunityId string  `protobuf:"bytes,2,opt,name=community_id,json=communityId,proto3" json:"community_id,omitempty"`
	ChallengeId string  `protobuf:"bytes,3,opt,name=challenge_id,json=challengeId,proto3" json:"challenge_id,omitempty"`
	Progres     float32 `protobuf:"fixed32,4,opt,name=progres,proto3" json:"progres,omitempty"`
	CompletedAt string  `protobuf:"bytes,5,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
}

func (x *JoinChallengeResponse) Reset() {
	*x = JoinChallengeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_sustainabilityService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinChallengeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinChallengeResponse) ProtoMessage() {}

func (x *JoinChallengeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_sustainabilityService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinChallengeResponse.ProtoReflect.Descriptor instead.
func (*JoinChallengeResponse) Descriptor() ([]byte, []int) {
	return file_protos_sustainabilityService_proto_rawDescGZIP(), []int{9}
}

func (x *JoinChallengeResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *JoinChallengeResponse) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

func (x *JoinChallengeResponse) GetChallengeId() string {
	if x != nil {
		return x.ChallengeId
	}
	return ""
}

func (x *JoinChallengeResponse) GetProgres() float32 {
	if x != nil {
		return x.Progres
	}
	return 0
}

func (x *JoinChallengeResponse) GetCompletedAt() string {
	if x != nil {
		return x.CompletedAt
	}
	return ""
}

// 6
type UpdateChallengeProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CommunityId string  `protobuf:"bytes,2,opt,name=community_id,json=communityId,proto3" json:"community_id,omitempty"`
	ChallengeId string  `protobuf:"bytes,3,opt,name=challenge_id,json=challengeId,proto3" json:"challenge_id,omitempty"`
	Progres     float32 `protobuf:"fixed32,4,opt,name=progres,proto3" json:"progres,omitempty"`
	CompletedAt string  `protobuf:"bytes,5,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
}

func (x *UpdateChallengeProgressRequest) Reset() {
	*x = UpdateChallengeProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_sustainabilityService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateChallengeProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChallengeProgressRequest) ProtoMessage() {}

func (x *UpdateChallengeProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_sustainabilityService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChallengeProgressRequest.ProtoReflect.Descriptor instead.
func (*UpdateChallengeProgressRequest) Descriptor() ([]byte, []int) {
	return file_protos_sustainabilityService_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateChallengeProgressRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateChallengeProgressRequest) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

func (x *UpdateChallengeProgressRequest) GetChallengeId() string {
	if x != nil {
		return x.ChallengeId
	}
	return ""
}

func (x *UpdateChallengeProgressRequest) GetProgres() float32 {
	if x != nil {
		return x.Progres
	}
	return 0
}

func (x *UpdateChallengeProgressRequest) GetCompletedAt() string {
	if x != nil {
		return x.CompletedAt
	}
	return ""
}

type UpdateChallengeProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CommunityId string  `protobuf:"bytes,2,opt,name=community_id,json=communityId,proto3" json:"community_id,omitempty"`
	ChallengeId string  `protobuf:"bytes,3,opt,name=challenge_id,json=challengeId,proto3" json:"challenge_id,omitempty"`
	Progres     float32 `protobuf:"fixed32,4,opt,name=progres,proto3" json:"progres,omitempty"`
	CompletedAt string  `protobuf:"bytes,5,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
}

func (x *UpdateChallengeProgressResponse) Reset() {
	*x = UpdateChallengeProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_sustainabilityService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateChallengeProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChallengeProgressResponse) ProtoMessage() {}

func (x *UpdateChallengeProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_sustainabilityService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChallengeProgressResponse.ProtoReflect.Descriptor instead.
func (*UpdateChallengeProgressResponse) Descriptor() ([]byte, []int) {
	return file_protos_sustainabilityService_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateChallengeProgressResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateChallengeProgressResponse) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

func (x *UpdateChallengeProgressResponse) GetChallengeId() string {
	if x != nil {
		return x.ChallengeId
	}
	return ""
}

func (x *UpdateChallengeProgressResponse) GetProgres() float32 {
	if x != nil {
		return x.Progres
	}
	return 0
}

func (x *UpdateChallengeProgressResponse) GetCompletedAt() string {
	if x != nil {
		return x.CompletedAt
	}
	return ""
}

// 7
type GetUserChallengesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserChallengesRequest) Reset() {
	*x = GetUserChallengesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_sustainabilityService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserChallengesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserChallengesRequest) ProtoMessage() {}

func (x *GetUserChallengesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_sustainabilityService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserChallengesRequest.ProtoReflect.Descriptor instead.
func (*GetUserChallengesRequest) Descriptor() ([]byte, []int) {
	return file_protos_sustainabilityService_proto_rawDescGZIP(), []int{12}
}

func (x *GetUserChallengesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserChallengesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Challenges []*JoinChallengeResponse `protobuf:"bytes,1,rep,name=challenges,proto3" json:"challenges,omitempty"`
}

func (x *GetUserChallengesResponse) Reset() {
	*x = GetUserChallengesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_sustainabilityService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserChallengesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserChallengesResponse) ProtoMessage() {}

func (x *GetUserChallengesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_sustainabilityService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserChallengesResponse.ProtoReflect.Descriptor instead.
func (*GetUserChallengesResponse) Descriptor() ([]byte, []int) {
	return file_protos_sustainabilityService_proto_rawDescGZIP(), []int{13}
}

func (x *GetUserChallengesResponse) GetChallenges() []*JoinChallengeResponse {
	if x != nil {
		return x.Challenges
	}
	return nil
}

// 8
type GetUserLeaderboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetUserLeaderboardRequest) Reset() {
	*x = GetUserLeaderboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_sustainabilityService_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserLeaderboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserLeaderboardRequest) ProtoMessage() {}

func (x *GetUserLeaderboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_sustainabilityService_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserLeaderboardRequest.ProtoReflect.Descriptor instead.
func (*GetUserLeaderboardRequest) Descriptor() ([]byte, []int) {
	return file_protos_sustainabilityService_proto_rawDescGZIP(), []int{14}
}

type GetUserLeaderboardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Leaderboard []*LeaderboardUser `protobuf:"bytes,1,rep,name=leaderboard,proto3" json:"leaderboard,omitempty"`
}

func (x *GetUserLeaderboardResponse) Reset() {
	*x = GetUserLeaderboardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_sustainabilityService_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserLeaderboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserLeaderboardResponse) ProtoMessage() {}

func (x *GetUserLeaderboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_sustainabilityService_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserLeaderboardResponse.ProtoReflect.Descriptor instead.
func (*GetUserLeaderboardResponse) Descriptor() ([]byte, []int) {
	return file_protos_sustainabilityService_proto_rawDescGZIP(), []int{15}
}

func (x *GetUserLeaderboardResponse) GetLeaderboard() []*LeaderboardUser {
	if x != nil {
		return x.Leaderboard
	}
	return nil
}

// 9
type GetCommunityLeaderboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCommunityLeaderboardRequest) Reset() {
	*x = GetCommunityLeaderboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_sustainabilityService_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommunityLeaderboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommunityLeaderboardRequest) ProtoMessage() {}

func (x *GetCommunityLeaderboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_sustainabilityService_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommunityLeaderboardRequest.ProtoReflect.Descriptor instead.
func (*GetCommunityLeaderboardRequest) Descriptor() ([]byte, []int) {
	return file_protos_sustainabilityService_proto_rawDescGZIP(), []int{16}
}

type GetCommunityLeaderboardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Leaderboard []*LeaderboardCommunity `protobuf:"bytes,1,rep,name=leaderboard,proto3" json:"leaderboard,omitempty"`
}

func (x *GetCommunityLeaderboardResponse) Reset() {
	*x = GetCommunityLeaderboardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_sustainabilityService_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommunityLeaderboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommunityLeaderboardResponse) ProtoMessage() {}

func (x *GetCommunityLeaderboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_sustainabilityService_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommunityLeaderboardResponse.ProtoReflect.Descriptor instead.
func (*GetCommunityLeaderboardResponse) Descriptor() ([]byte, []int) {
	return file_protos_sustainabilityService_proto_rawDescGZIP(), []int{17}
}

func (x *GetCommunityLeaderboardResponse) GetLeaderboard() []*LeaderboardCommunity {
	if x != nil {
		return x.Leaderboard
	}
	return nil
}

// 10
type PostChallengesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string  `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	GoalAmount  float32 `protobuf:"fixed32,3,opt,name=goal_amount,json=goalAmount,proto3" json:"goal_amount,omitempty"`
	GoalUnit    string  `protobuf:"bytes,4,opt,name=goal_unit,json=goalUnit,proto3" json:"goal_unit,omitempty"`
	StartDate   string  `protobuf:"bytes,5,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate     string  `protobuf:"bytes,6,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *PostChallengesRequest) Reset() {
	*x = PostChallengesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_sustainabilityService_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostChallengesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostChallengesRequest) ProtoMessage() {}

func (x *PostChallengesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_sustainabilityService_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostChallengesRequest.ProtoReflect.Descriptor instead.
func (*PostChallengesRequest) Descriptor() ([]byte, []int) {
	return file_protos_sustainabilityService_proto_rawDescGZIP(), []int{18}
}

func (x *PostChallengesRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PostChallengesRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PostChallengesRequest) GetGoalAmount() float32 {
	if x != nil {
		return x.GoalAmount
	}
	return 0
}

func (x *PostChallengesRequest) GetGoalUnit() string {
	if x != nil {
		return x.GoalUnit
	}
	return ""
}

func (x *PostChallengesRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *PostChallengesRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

type PostChallengesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	GoalAmount  float32 `protobuf:"fixed32,4,opt,name=goal_amount,json=goalAmount,proto3" json:"goal_amount,omitempty"`
	GoalUnit    string  `protobuf:"bytes,5,opt,name=goal_unit,json=goalUnit,proto3" json:"goal_unit,omitempty"`
	StartDate   string  `protobuf:"bytes,6,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate     string  `protobuf:"bytes,7,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *PostChallengesResponse) Reset() {
	*x = PostChallengesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_sustainabilityService_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostChallengesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostChallengesResponse) ProtoMessage() {}

func (x *PostChallengesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_sustainabilityService_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostChallengesResponse.ProtoReflect.Descriptor instead.
func (*PostChallengesResponse) Descriptor() ([]byte, []int) {
	return file_protos_sustainabilityService_proto_rawDescGZIP(), []int{19}
}

func (x *PostChallengesResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PostChallengesResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PostChallengesResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PostChallengesResponse) GetGoalAmount() float32 {
	if x != nil {
		return x.GoalAmount
	}
	return 0
}

func (x *PostChallengesResponse) GetGoalUnit() string {
	if x != nil {
		return x.GoalUnit
	}
	return ""
}

func (x *PostChallengesResponse) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *PostChallengesResponse) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

// Leaderboard
type LeaderboardUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CommunityId string  `protobuf:"bytes,2,opt,name=community_id,json=communityId,proto3" json:"community_id,omitempty"`
	Progres     float32 `protobuf:"fixed32,3,opt,name=progres,proto3" json:"progres,omitempty"`
}

func (x *LeaderboardUser) Reset() {
	*x = LeaderboardUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_sustainabilityService_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderboardUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardUser) ProtoMessage() {}

func (x *LeaderboardUser) ProtoReflect() protoreflect.Message {
	mi := &file_protos_sustainabilityService_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardUser.ProtoReflect.Descriptor instead.
func (*LeaderboardUser) Descriptor() ([]byte, []int) {
	return file_protos_sustainabilityService_proto_rawDescGZIP(), []int{20}
}

func (x *LeaderboardUser) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LeaderboardUser) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

func (x *LeaderboardUser) GetProgres() float32 {
	if x != nil {
		return x.Progres
	}
	return 0
}

type LeaderboardCommunity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommunityId string  `protobuf:"bytes,2,opt,name=community_id,json=communityId,proto3" json:"community_id,omitempty"`
	Progres     float32 `protobuf:"fixed32,3,opt,name=progres,proto3" json:"progres,omitempty"`
}

func (x *LeaderboardCommunity) Reset() {
	*x = LeaderboardCommunity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_sustainabilityService_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderboardCommunity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardCommunity) ProtoMessage() {}

func (x *LeaderboardCommunity) ProtoReflect() protoreflect.Message {
	mi := &file_protos_sustainabilityService_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardCommunity.ProtoReflect.Descriptor instead.
func (*LeaderboardCommunity) Descriptor() ([]byte, []int) {
	return file_protos_sustainabilityService_proto_rawDescGZIP(), []int{21}
}

func (x *LeaderboardCommunity) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

func (x *LeaderboardCommunity) GetProgres() float32 {
	if x != nil {
		return x.Progres
	}
	return 0
}

var File_protos_sustainabilityService_proto protoreflect.FileDescriptor

var file_protos_sustainabilityService_proto_rawDesc = []byte{
	0x0a, 0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x10,
	0x4c, 0x6f, 0x67, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x6e, 0x69, 0x74, 0x22, 0xc4, 0x01, 0x0a, 0x11, 0x4c, 0x6f, 0x67, 0x49, 0x6d, 0x70, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e,
	0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x41, 0x74, 0x22, 0x2f, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x69, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c,
	0x6f, 0x67, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x07, 0x69, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x73, 0x22, 0x3e, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x69, 0x6d, 0x70, 0x61, 0x63,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x53, 0x75, 0x73, 0x74, 0x61,
	0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4c, 0x6f, 0x67, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x07, 0x69, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x66, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0a, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x22, 0xb2, 0x01, 0x0a, 0x14,
	0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xb3, 0x01, 0x0a, 0x15, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xbc, 0x01, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xbd, 0x01, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x33, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x53, 0x75,
	0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x66, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x48, 0x0a, 0x0b, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0b, 0x6c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x22, 0x20, 0x0a, 0x1e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x70, 0x0a, 0x1f,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4d, 0x0a, 0x0b, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x52, 0x0b, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x22, 0xc7,
	0x01, 0x0a, 0x15, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x6f, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x67, 0x6f, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x6f, 0x61, 0x6c, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x6f, 0x61, 0x6c, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0xd8, 0x01, 0x0a, 0x16, 0x50, 0x6f, 0x73,
	0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x67,
	0x6f, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0a, 0x67, 0x6f, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x67, 0x6f, 0x61, 0x6c, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x67, 0x6f, 0x61, 0x6c, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x22, 0x67, 0x0a, 0x0f, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x22, 0x53, 0x0a, 0x14,
	0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x32, 0xae, 0x09, 0x0a, 0x15, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5e, 0x0a, 0x09, 0x4c,
	0x6f, 0x67, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x12, 0x27, 0x2e, 0x53, 0x75, 0x73, 0x74, 0x61,
	0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4c, 0x6f, 0x67, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x49, 0x6d, 0x70,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x12, 0x2b, 0x2e, 0x53,
	0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6d, 0x70, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x53, 0x75, 0x73, 0x74,
	0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x12, 0x30, 0x2e,
	0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x31, 0x2e, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x49, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x73, 0x12, 0x2b, 0x2e, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a,
	0x0a, 0x0d, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12,
	0x2b, 0x2e, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x53,
	0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x17, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x35, 0x2e, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e,
	0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x2f, 0x2e, 0x53, 0x75, 0x73,
	0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x53, 0x75,
	0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x12, 0x30, 0x2e, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x12, 0x35, 0x2e, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x53, 0x75,
	0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x0e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x2c, 0x2e, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x20, 0x5a, 0x1e, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x53,
	0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_sustainabilityService_proto_rawDescOnce sync.Once
	file_protos_sustainabilityService_proto_rawDescData = file_protos_sustainabilityService_proto_rawDesc
)

func file_protos_sustainabilityService_proto_rawDescGZIP() []byte {
	file_protos_sustainabilityService_proto_rawDescOnce.Do(func() {
		file_protos_sustainabilityService_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_sustainabilityService_proto_rawDescData)
	})
	return file_protos_sustainabilityService_proto_rawDescData
}

var file_protos_sustainabilityService_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_protos_sustainabilityService_proto_goTypes = []any{
	(*LogImpactRequest)(nil),                // 0: SustainabilityService.LogImpactRequest
	(*LogImpactResponse)(nil),               // 1: SustainabilityService.LogImpactResponse
	(*GetUserImpactRequest)(nil),            // 2: SustainabilityService.GetUserImpactRequest
	(*GetUserImpactResponse)(nil),           // 3: SustainabilityService.GetUserImpactResponse
	(*GetCommunityImpactRequest)(nil),       // 4: SustainabilityService.GetCommunityImpactRequest
	(*GetCommunityImpactResponse)(nil),      // 5: SustainabilityService.GetCommunityImpactResponse
	(*GetChallengesRequest)(nil),            // 6: SustainabilityService.GetChallengesRequest
	(*GetChallengesResponse)(nil),           // 7: SustainabilityService.GetChallengesResponse
	(*JoinChallengeRequest)(nil),            // 8: SustainabilityService.JoinChallengeRequest
	(*JoinChallengeResponse)(nil),           // 9: SustainabilityService.JoinChallengeResponse
	(*UpdateChallengeProgressRequest)(nil),  // 10: SustainabilityService.UpdateChallengeProgressRequest
	(*UpdateChallengeProgressResponse)(nil), // 11: SustainabilityService.UpdateChallengeProgressResponse
	(*GetUserChallengesRequest)(nil),        // 12: SustainabilityService.GetUserChallengesRequest
	(*GetUserChallengesResponse)(nil),       // 13: SustainabilityService.GetUserChallengesResponse
	(*GetUserLeaderboardRequest)(nil),       // 14: SustainabilityService.GetUserLeaderboardRequest
	(*GetUserLeaderboardResponse)(nil),      // 15: SustainabilityService.GetUserLeaderboardResponse
	(*GetCommunityLeaderboardRequest)(nil),  // 16: SustainabilityService.GetCommunityLeaderboardRequest
	(*GetCommunityLeaderboardResponse)(nil), // 17: SustainabilityService.GetCommunityLeaderboardResponse
	(*PostChallengesRequest)(nil),           // 18: SustainabilityService.PostChallengesRequest
	(*PostChallengesResponse)(nil),          // 19: SustainabilityService.PostChallengesResponse
	(*LeaderboardUser)(nil),                 // 20: SustainabilityService.LeaderboardUser
	(*LeaderboardCommunity)(nil),            // 21: SustainabilityService.LeaderboardCommunity
}
var file_protos_sustainabilityService_proto_depIdxs = []int32{
	1,  // 0: SustainabilityService.GetUserImpactResponse.impacts:type_name -> SustainabilityService.LogImpactResponse
	1,  // 1: SustainabilityService.GetCommunityImpactResponse.impacts:type_name -> SustainabilityService.LogImpactResponse
	19, // 2: SustainabilityService.GetChallengesResponse.challenges:type_name -> SustainabilityService.PostChallengesResponse
	9,  // 3: SustainabilityService.GetUserChallengesResponse.challenges:type_name -> SustainabilityService.JoinChallengeResponse
	20, // 4: SustainabilityService.GetUserLeaderboardResponse.leaderboard:type_name -> SustainabilityService.LeaderboardUser
	21, // 5: SustainabilityService.GetCommunityLeaderboardResponse.leaderboard:type_name -> SustainabilityService.LeaderboardCommunity
	0,  // 6: SustainabilityService.SustainabilityService.LogImpact:input_type -> SustainabilityService.LogImpactRequest
	2,  // 7: SustainabilityService.SustainabilityService.GetUserImpact:input_type -> SustainabilityService.GetUserImpactRequest
	4,  // 8: SustainabilityService.SustainabilityService.GetCommunityImpact:input_type -> SustainabilityService.GetCommunityImpactRequest
	6,  // 9: SustainabilityService.SustainabilityService.GetChallenges:input_type -> SustainabilityService.GetChallengesRequest
	8,  // 10: SustainabilityService.SustainabilityService.JoinChallenge:input_type -> SustainabilityService.JoinChallengeRequest
	10, // 11: SustainabilityService.SustainabilityService.UpdateChallengeProgress:input_type -> SustainabilityService.UpdateChallengeProgressRequest
	12, // 12: SustainabilityService.SustainabilityService.GetUserChallenges:input_type -> SustainabilityService.GetUserChallengesRequest
	14, // 13: SustainabilityService.SustainabilityService.GetUserLeaderboard:input_type -> SustainabilityService.GetUserLeaderboardRequest
	16, // 14: SustainabilityService.SustainabilityService.GetCommunityLeaderboard:input_type -> SustainabilityService.GetCommunityLeaderboardRequest
	18, // 15: SustainabilityService.SustainabilityService.PostChallenges:input_type -> SustainabilityService.PostChallengesRequest
	1,  // 16: SustainabilityService.SustainabilityService.LogImpact:output_type -> SustainabilityService.LogImpactResponse
	3,  // 17: SustainabilityService.SustainabilityService.GetUserImpact:output_type -> SustainabilityService.GetUserImpactResponse
	5,  // 18: SustainabilityService.SustainabilityService.GetCommunityImpact:output_type -> SustainabilityService.GetCommunityImpactResponse
	7,  // 19: SustainabilityService.SustainabilityService.GetChallenges:output_type -> SustainabilityService.GetChallengesResponse
	9,  // 20: SustainabilityService.SustainabilityService.JoinChallenge:output_type -> SustainabilityService.JoinChallengeResponse
	11, // 21: SustainabilityService.SustainabilityService.UpdateChallengeProgress:output_type -> SustainabilityService.UpdateChallengeProgressResponse
	13, // 22: SustainabilityService.SustainabilityService.GetUserChallenges:output_type -> SustainabilityService.GetUserChallengesResponse
	15, // 23: SustainabilityService.SustainabilityService.GetUserLeaderboard:output_type -> SustainabilityService.GetUserLeaderboardResponse
	17, // 24: SustainabilityService.SustainabilityService.GetCommunityLeaderboard:output_type -> SustainabilityService.GetCommunityLeaderboardResponse
	19, // 25: SustainabilityService.SustainabilityService.PostChallenges:output_type -> SustainabilityService.PostChallengesResponse
	16, // [16:26] is the sub-list for method output_type
	6,  // [6:16] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_protos_sustainabilityService_proto_init() }
func file_protos_sustainabilityService_proto_init() {
	if File_protos_sustainabilityService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_sustainabilityService_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*LogImpactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_sustainabilityService_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*LogImpactResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_sustainabilityService_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserImpactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_sustainabilityService_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserImpactResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_sustainabilityService_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetCommunityImpactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_sustainabilityService_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetCommunityImpactResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_sustainabilityService_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetChallengesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_sustainabilityService_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetChallengesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_sustainabilityService_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*JoinChallengeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_sustainabilityService_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*JoinChallengeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_sustainabilityService_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateChallengeProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_sustainabilityService_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateChallengeProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_sustainabilityService_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserChallengesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_sustainabilityService_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserChallengesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_sustainabilityService_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserLeaderboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_sustainabilityService_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserLeaderboardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_sustainabilityService_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetCommunityLeaderboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_sustainabilityService_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetCommunityLeaderboardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_sustainabilityService_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*PostChallengesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_sustainabilityService_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*PostChallengesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_sustainabilityService_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*LeaderboardUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_sustainabilityService_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*LeaderboardCommunity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_sustainabilityService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_sustainabilityService_proto_goTypes,
		DependencyIndexes: file_protos_sustainabilityService_proto_depIdxs,
		MessageInfos:      file_protos_sustainabilityService_proto_msgTypes,
	}.Build()
	File_protos_sustainabilityService_proto = out.File
	file_protos_sustainabilityService_proto_rawDesc = nil
	file_protos_sustainabilityService_proto_goTypes = nil
	file_protos_sustainabilityService_proto_depIdxs = nil
}
